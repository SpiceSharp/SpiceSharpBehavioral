<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SpiceSharpBehavioral</name>
    </assembly>
    <members>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder">
            <summary>
            A builder that can compute values.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Builders.IBuilder`1" />
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.FunctionFound">
            <inheritdoc/>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.VariableFound">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.RelativeTolerance">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.AbsoluteTolerance">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the specified value from the specified expression node.
            </summary>
            <param name="expression">The expression node.</param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.OnFunctionFound(SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs{System.Numerics.Complex})">
            <summary>
            Called when a function was found.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.OnVariableFound(SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs{System.Numerics.Complex})">
            <summary>
            Called when a variable was found.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder.BuildNode(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the node.
            </summary>
            <param name="node">The node.</param>
            <returns>The built value.</returns>
            <exception cref="T:SpiceSharp.SpiceSharpException">Unrecognized node</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.ComplexBuilderHelper">
            <summary>
            Helper methods for a <see cref="T:SpiceSharpBehavioral.Builders.Direct.ComplexBuilder"/>.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.ComplexBuilderHelper.Defaults">
            <summary>
            A set of default functions.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.ComplexBuilderHelper.RegisterDefaultFunctions(SpiceSharpBehavioral.Builders.Direct.IDirectBuilder{System.Numerics.Complex})">
            <summary>
            Registers the default functions.
            </summary>
            <param name="builder">The builder.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="builder"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.ComplexBuilderHelper.RemapFunctions(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Helper methods that changes the equality comparer for function names.
            </summary>
            <param name="comparer">The name comparer.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1">
            <summary>
            Event arguments for when a function has been found.
            </summary>
            <typeparam param="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1.Builder">
            <summary>
            Gets the builder.
            </summary>
            <value>
            The builder.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1.Function">
            <summary>
            The function.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1.Result">
            <summary>
            Gets or sets the result of the function.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1.Created">
            <summary>
            Gets a flag whether ojr not the function result has been assigned.
            </summary>
            <value>
                <c>true</c> if the function result was assigned; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1.#ctor(SpiceSharpBehavioral.Builders.Direct.IDirectBuilder{`0},SpiceSharpBehavioral.Parsers.Nodes.FunctionNode)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs`1"/> class.
            </summary>
            <param name="builder">The builder.</param>
            <param name="function">The function node.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="builder"/> or <paramref name="function"/> is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.IDirectBuilder`1">
            <summary>
            A direct builder.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.IDirectBuilder`1.RelativeTolerance">
            <summary>
            Gets or sets the relative tolerance.
            </summary>
            <value>
            The relative tolerance.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.IDirectBuilder`1.AbsoluteTolerance">
            <summary>
            Gets or sets the absolute tolerance.
            </summary>
            <value>
            The absolute tolerance.
            </value>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Direct.IDirectBuilder`1.FunctionFound">
            <summary>
            Occurs when a function is encountered.
            </summary>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Direct.IDirectBuilder`1.VariableFound">
            <summary>
            Occurs when a variable is encountered.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.RealBuilder">
            <summary>
            A builder that can compute values.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Builders.IBuilder`1" />
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Direct.RealBuilder.FunctionFound">
            <inheritdoc/>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Direct.RealBuilder.VariableFound">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.RealBuilder.RelativeTolerance">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.RealBuilder.AbsoluteTolerance">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.RealBuilder.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the specified value from the specified expression node.
            </summary>
            <param name="expression">The expression node.</param>
            <returns>
            The value.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.RealBuilder.OnFunctionFound(SpiceSharpBehavioral.Builders.Direct.FunctionFoundEventArgs{System.Double})">
            <summary>
            Called when a function was found.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.RealBuilder.OnVariableFound(SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs{System.Double})">
            <summary>
            Called when a variable was found.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.RealBuilder.BuildNode(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the node.
            </summary>
            <param name="node">The node.</param>
            <returns>The built value.</returns>
            <exception cref="T:SpiceSharp.SpiceSharpException">Unrecognized node</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.RealBuilderHelper">
            <summary>
            Helper methods for a <see cref="T:SpiceSharpBehavioral.Builders.Direct.RealBuilder"/>.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.RealBuilderHelper.Defaults">
            <summary>
            A set of default functions.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.RealBuilderHelper.RegisterDefaultFunctions(SpiceSharpBehavioral.Builders.Direct.IDirectBuilder{System.Double})">
            <summary>
            Registers the default functions.
            </summary>
            <param name="builder">The builder.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="builder"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.RealBuilderHelper.RemapFunctions(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Helper methods that changes the equality comparer for function names.
            </summary>
            <param name="comparer">The name comparer.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1">
            <summary>
            Event arguments used when a variable was found.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1.Builder">
            <summary>
            Gets the builder.
            </summary>
            <value>
            The builder.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1.Node">
            <summary>
            Gets the variable.
            </summary>
            <value>
            The variable.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1.Result">
            <summary>
            Gets or sets the result of the variable.
            </summary>
            <value>
            The value of the variable.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1.Created">
            <summary>
            Gets whether or not a variable has received a value.
            </summary>
            <value>
                <c>true</c> if the variable has received a value; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1.#ctor(SpiceSharpBehavioral.Builders.Direct.IDirectBuilder{`0},SpiceSharpBehavioral.Parsers.Nodes.VariableNode)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Direct.VariableFoundEventArgs`1"/> class.
            </summary>
            <param name="builder">The builder.</param>
            <param name="node">The variable node.</param>
            <exception cref="T:System.ArgumentNullException">Throw if <paramref name="builder"/> or <paramref name="node"/> is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.HelperFunctions">
            <summary>
            Supporting functions for behavioral models.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.HelperFunctions.FudgeFactor">
            <summary>
            Gets or sets a fudge factor for avoid edge cases (like division by 0).
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.SafeDivide(System.Double,System.Double)">
            <summary>
            Divides two numbers while avoiding division by 0 using a fudge factor.
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns>
                The division.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.SafeDivide(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            Divides two complex numbers while avoiding division by 0 using a fudge factor.
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns>
                The division.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Equals(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Checks if two numbers are equal.
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <param name="relTol">The relative tolerance.</param>
            <param name="absTol">The absolute tolerance.</param>
            <returns>
                <c>true</c> if the two numbers are within tolerance; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Equals(System.Numerics.Complex,System.Numerics.Complex,System.Double,System.Double)">
            <summary>
            Checks if two complex numbers are equal.
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <param name="relTol">The relative tolerance.</param>
            <param name="absTol">The absolute tolerance.</param>
            <returns>
                <c>true</c> if the two numbers are within tolerance; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Real(System.Numerics.Complex)">
            <summary>
            Gets the real part of a complex number.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The real part.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Imag(System.Numerics.Complex)">
            <summary>
            Gets the imaginary part of a complex number.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The imaginary part.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Log(System.Double)">
            <summary>
            Takes the natural logarithm.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The natural logarithm.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Log(System.Numerics.Complex)">
            <summary>
            Takes the natural logarithm.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The natural logarithm.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Log10(System.Double)">
            <summary>
            Takes the logarithm base 10.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The logarithm base 10.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Log10(System.Numerics.Complex)">
            <summary>
            Takes the logarithm base 10.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The logarithm base 10.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Decibels(System.Numerics.Complex)">
            <summary>
            Gets the magnitude of the complex value in decibels.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The magnitude in decibels.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Phase(System.Numerics.Complex)">
            <summary>
            Gets the phase of the complex value in degrees.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The phase in degrees.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Atanh(System.Double)">
            <summary>
            Computes the inverse arc tangent hyperbolic.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Atanh(System.Numerics.Complex)">
            <summary>
            Computes the inverse arc tangent hyperbolic.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Pow(System.Double,System.Double)">
            <summary>
            Raises a number to a power.
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns></returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Power(System.Double,System.Double)">
            <summary>
            Raises a number to a power. The function is made symmetrical. Also known as "pwr".
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Power(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            Raises a number to a power. The function is made radially symmetrical. Also known as "pwr".
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Power2(System.Double,System.Double)">
            <summary>
            Raises a number to a power. The function is made antisymmetrical. Also known as "pwrs".
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Power2(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            Raises a number to a power. The function is made antisymmetrical around the imaginary axis. Also known as "pwrs".
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step(System.Double)">
            <summary>
            The step function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step(System.Numerics.Complex)">
            <summary>
            The step function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step2(System.Double)">
            <summary>
            The step function with an initial ramp.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step2(System.Numerics.Complex)">
            <summary>
            The step function with an initial ramp.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step2Derivative(System.Double)">
            <summary>
            The derivative of <see cref="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step2(System.Double)"/>.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The derivative of the step function with initial ramp.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step2Derivative(System.Numerics.Complex)">
            <summary>
            The derivative of <see cref="M:SpiceSharpBehavioral.Builders.HelperFunctions.Step2(System.Double)"/>.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The derivative of the step function with initial ramp.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Ramp(System.Double)">
            <summary>
            The ramp function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Ramp(System.Numerics.Complex)">
            <summary>
            The ramp function.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.RampDerivative(System.Double)">
            <summary>
            The derivative of <see cref="M:SpiceSharpBehavioral.Builders.HelperFunctions.Ramp(System.Double)"/>
            </summary>
            <param name="arg">The argument.</param>
            <returns>The derivative of a ramp.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.RampDerivative(System.Numerics.Complex)">
            <summary>
            The derivative of <see cref="M:SpiceSharpBehavioral.Builders.HelperFunctions.Ramp(System.Numerics.Complex)"/> over the real part.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The derivative of a ramp.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Pwl(System.Double,SpiceSharpBehavioral.Builders.Point[])">
            <summary>
            Piece-wise linear interpolation.
            </summary>
            <param name="arg">The argument.</param>
            <param name="data">The interpolation data.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.PwlDerivative(System.Double,SpiceSharpBehavioral.Builders.Point[])">
            <summary>
            The derivative of <see cref="M:SpiceSharpBehavioral.Builders.HelperFunctions.Pwl(System.Double,SpiceSharpBehavioral.Builders.Point[])" />.
            </summary>
            <param name="arg">The argument.</param>
            <param name="data">The interpolation data.</param>
            <returns>The interpolated value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Square(System.Double)">
            <summary>
            Squares a value.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Square(System.Numerics.Complex)">
            <summary>
            Squares a value.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Sqrt(System.Double)">
            <summary>
            Calculates the square root of a number.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Sqrt(System.Numerics.Complex)">
            <summary>
            Calculates the square root of a number.
            </summary>
            <param name="arg">The argument.</param>
            <returns>The result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Sign(System.Double)">
            <summary>
            Returns the sign of the argument.
            </summary>
            <param name="arg">The argument.</param>
            <returns>-1.0 if negative; 1.0 if positive; otherwise 0.0.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Hypot(System.Double,System.Double)">
            <summary>
            Returns the hypothenuse (sqrt(x^2+y^2)).
            </summary>
            <param name="y">The first argument.</param>
            <param name="x">The second argument.</param>
            <returns>The hypothenuse.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Limit(System.Double,System.Double,System.Double)">
            <summary>
            Returns the intermediate value of x, y, z.
            </summary>
            <param name="x">The argument</param>
            <param name="y">Mininum value.</param>
            <param name="z">Max value.</param>
            <returns></returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Limit(System.Numerics.Complex,System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            Returns the intermediate value of x, y, z.
            </summary>
            <param name="x">The argument</param>
            <param name="y">Mininum value.</param>
            <param name="z">Max value.</param>
            <returns></returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Hypot(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            Returns the hypothenuse (sqrt(|x|^2+|y|^2)).
            </summary>
            <param name="y">The first argument.</param>
            <param name="x">The second argument.</param>
            <returns>The hypothenuse.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Round(System.Numerics.Complex,System.Int32)">
            <summary>
            Returns the rounded value of the complex number.
            </summary>
            <param name="a">The number.</param>
            <param name="n">The number of decimals.</param>
            <returns></returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Floor(System.Numerics.Complex)">
            <summary>
            Returns the floor.
            </summary>
            <param name="a">The argument.</param>
            <returns>The floor value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Ceiling(System.Numerics.Complex)">
            <summary>
            Returns the ceiling.
            </summary>
            <param name="a">The argument.</param>
            <returns>The ceiling value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Abs(System.Numerics.Complex)">
            <summary>
            Takes the absolute value of a complex number.
            </summary>
            <param name="a">The complex number.</param>
            <returns>The absolute value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Min(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            The minimum of two complex numbers (only uses the real parts).
            </summary>
            <param name="a">The first argument.</param>
            <param name="b">The second argument.</param>
            <returns>The smallest real part of either arguments.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Max(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            The maximum of two complex numbers (only uses the real parts).
            </summary>
            <param name="a">The first argument.</param>
            <param name="b">The second argument.</param>
            <returns>The largest real part of either arguments.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.HelperFunctions.Atan2(System.Numerics.Complex,System.Numerics.Complex)">
            <summary>
            The complex version for atan2 (only uses the real parts).
            </summary>
            <param name="y">The first argument.</param>
            <param name="x">The second argument.</param>
            <returns>The angle in a 2D plane.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilder">
            <summary>
            A function builder for complex numbers.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1"/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilder.RelativeTolerance">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilder.AbsoluteTolerance">
            <inheritdoc/>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilder.FunctionFound">
            <inheritdoc/>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilder.VariableFound">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilder.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilderHelper">
            <summary>
            Helper methods for a <see cref="T:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder"/>.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilderHelper.ApplyFunction">
            <summary>
            A delegate for applying a function to an IL state.
            </summary>
            <param name="il">The IL state.</param>
            <param name="arguments">The function arguments.</param>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilderHelper.Defaults">
            <summary>
            A set of default functions.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilderHelper.RegisterDefaultFunctions(SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Numerics.Complex})">
            <summary>
            Registers the default functions for a function builder.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexFunctionBuilderHelper.RemapFunctions(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Helper methods that changes the equality comparer for function names.
            </summary>
            <param name="comparer">The name comparer.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.ComplexILState">
            <summary>
            An IL state for complex values.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexILState.#ctor(SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Numerics.Complex})">
            <summary>
            Creates a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Functions.ComplexILState"/> class.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexILState.Push(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexILState.Push(System.Numerics.Complex)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexILState.PushReal(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ComplexILState.RealToComplex">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs`1">
            <summary>
            Event arguments for when a function has been found.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs`1.Function">
            <summary>
            Gets the function node.
            </summary>
            <value>
            The function node.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs`1.ILState">
            <summary>
            Gets the IL state for creating the function.
            </summary>
            <value>
            The IL state.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs`1.Created">
            <summary>
            Gets or sets a flag whether or not the function has been created.
            </summary>
            <value>
                <c>true</c> if the function was created; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs`1.#ctor(SpiceSharpBehavioral.Parsers.Nodes.FunctionNode,SpiceSharpBehavioral.Builders.Functions.IILState{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs`1"/> class.
            </summary>
            <param name="function">The function node.</param>
            <param name="ilState">The IL state.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if any parameter is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1">
            <summary>
            A function builder.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1.RelativeTolerance">
            <summary>
            Gets or sets the relative tolerance.
            </summary>
            <value>
            The relative tolerance.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1.AbsoluteTolerance">
            <summary>
            Gets or sets the absolute tolerance.
            </summary>
            <value>
            The absolute tolerance.
            </value>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1.FunctionFound">
            <summary>
            Occurs when a function is encountered.
            </summary>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1.VariableFound">
            <summary>
            Occurs when a variable is encountered.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.IILComplexState">
            <summary>
            Additional methods that can be supplied by a complex IL state.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILComplexState.PushReal(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Get the real part of a complex value on the stack.
            </summary>
            <param name="node">The node (optional).</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILComplexState.RealToComplex">
            <summary>
            Convert a real value on the stack to a complex value.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.IILState`1">
            <summary>
            Describes a state for writing IL code.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.IILState`1.Builder">
            <summary>
            Gets the builder creating the method.
            </summary>
            <value>The builder.</value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.IILState`1.Generator">
            <summary>
            Gets the IL generator.
            </summary>
            <value>The IL generator.</value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Push(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Pushes a node on the stack.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Push(`0)">
            <summary>
            Pushes a value on the stack.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.PushInt(System.Int32)">
            <summary>
            Pushes an integer on the stack.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.PushDouble(System.Double)">
            <summary>
            Pushes a double value on the stack.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.PushCheck(System.Reflection.Emit.OpCode,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Pushes a check on the stack.
            </summary>
            <param name="opCode">The opcode that checks and jumps.</param>
            <param name="ifTrue">The result if true.</param>
            <param name="ifFalse">The result if false.</param>
            <exception cref="T:SpiceSharp.SpiceSharpException">Thrown if the operator code is invalid.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Call(System.Object,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Calls a function.
            </summary>
            <param name="target">The target method.</param>
            <param name="method">The method info.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Call(System.Func{`0})">
            <summary>
            Shorthand for calling a function.
            </summary>
            <param name="function">The function.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Call(System.Func{`0,`0},System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Shorthand for calling a function with an argument.
            </summary>
            <param name="function">The function.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Call(System.Func{`0,`0,`0},System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Shorthand for calling a function with two arguments.
            </summary>
            <param name="function">The function.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.IILState`1.Call(System.Func{`0,`0,`0,`0},System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Shorthand for calling a function with three arguments.
            </summary>
            <param name="function">The function.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.ILState`1">
            <summary>
            An instance for building functions.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.ILState`1.Builder">
            <summary>
            Gets the builder.
            </summary>
            <value>
            The builder.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.ILState`1.Generator">
            <summary>
            Gets the IL generator.
            </summary>
            <value>
            The IL generator.
            </value>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.ILState`1.FunctionFound">
            <summary>
            Occurs when a function was encountered.
            </summary>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.ILState`1.VariableFound">
            <summary>
            Occurs when a variable was encountered.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.#ctor(SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Functions.ILState`1"/> class.
            </summary>
            <param name="parent">The parent function builder.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.OnFunctionFound(SpiceSharpBehavioral.Builders.Functions.FunctionFoundEventArgs{`0})">
            <summary>
            Call when a function has been encountered.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.OnVariableFound(SpiceSharpBehavioral.Builders.Functions.VariableFoundEventArgs{`0})">
            <summary>
            Call when a variable has been encountered.
            </summary>
            <param name="args">The event arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.CreateFunction">
            <summary>
            Creates the function.
            </summary>
            <returns>The function.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.PushInt(System.Int32)">
            <summary>
            Pushes the specified index.
            </summary>
            <param name="index">The index.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.PushDouble(System.Double)">
            <summary>
            Pushes the specified double value.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Push(`0)">
            <summary>
            Pushes a value on the stack.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.PushCheck(System.Reflection.Emit.OpCode,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Push(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Pushes an expression on the stack.
            </summary>
            <param name="node">The node.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Call(System.Object,System.Reflection.MethodInfo,System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Calls the specified method where all arguments are doubles.
            </summary>
            <param name="target">The target.</param>
            <param name="method">The method.</param>
            <param name="args">The arguments.</param>
            <exception cref="T:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException"></exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Call(System.Func{`0})">
            <summary>
            Calls the specified function.
            </summary>
            <param name="function">The function.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Call(System.Func{`0,`0},System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Calls the specified function.
            </summary>
            <param name="function">The function.</param>
            <param name="args">The arguments.</param>
            <exception cref="T:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException">Thrown if there isn't one argument.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Call(System.Func{`0,`0,`0},System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Calls the specified function.
            </summary>
            <param name="function">The function.</param>
            <param name="args">The arguments.</param>
            <exception cref="T:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException">Thrown if there aren't two arguments.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.ILState`1.Call(System.Func{`0,`0,`0,`0},System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Calls the specified function.
            </summary>
            <param name="function">The function.</param>
            <param name="args">The arguments.</param>
            <exception cref="T:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException">Thrown if there aren't two arguments.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder">
            <summary>
            A function builder for real numbers.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder`1" />
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder.RelativeTolerance">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder.AbsoluteTolerance">
            <inheritdoc/>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder.FunctionFound">
            <inheritdoc/>
        </member>
        <member name="E:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder.VariableFound">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilderHelper">
            <summary>
            Helper methods for a <see cref="T:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilder"/>.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilderHelper.ApplyFunction">
            <summary>
            Delegjate for applying a function to the IL state.
            </summary>
            <param name="il">The IL state.</param>
            <param name="arguments">The function arguments.</param>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilderHelper.Defaults">
            <summary>
            A set of default functions.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilderHelper.RemapFunctions(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Helper methods that changes the equality comparer for function names.
            </summary>
            <param name="comparer">The name comparer.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.RealFunctionBuilderHelper.RegisterDefaultFunctions(SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Double})">
            <summary>
            Registers the default functions.
            </summary>
            <param name="builder">The function builder.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="builder"/> is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.RealILState">
            <summary>
            An IL state for real values.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.RealILState.#ctor(SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Double})">
            <summary>
            Creates a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Functions.RealILState"/> class.
            </summary>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.RealILState.Push(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.RealILState.Push(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Functions.VariableFoundEventArgs`1">
            <summary>
            Event arguments for when a variable was found.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.VariableFoundEventArgs`1.Node">
            <summary>
            Gets the variable node.
            </summary>
            <value>
            The variable node.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Functions.VariableFoundEventArgs`1.Variable">
            <summary>
            Gets or sets the variable.
            </summary>
            <value>
            The variable.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Functions.VariableFoundEventArgs`1.#ctor(SpiceSharpBehavioral.Parsers.Nodes.VariableNode)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Functions.VariableFoundEventArgs`1"/> class.
            </summary>
            <param name="node">The variable node.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if any parameter is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.IBuilder`1">
            <summary>
            A builder for parsing expressions.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.IBuilder`1.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the specified value from the specified expression node.
            </summary>
            <param name="expression">The expression node.</param>
            <returns>The value.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.NodeFinder">
            <summary>
            A builder that evaluates which nodes are in the expression.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Builders.IBuilder`1" />
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.NodeFinder.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the specified value from the specified expression node.
            </summary>
            <param name="expression">The expression node.</param>
            <returns>
            The variable nodes.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.NodeFinder.VoltageNodes(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Finds all voltage nodes.
            </summary>
            <param name="expression">The expression node.</param>
            <returns>The voltage nodes.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.NodeFinder.CurrentNodes(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Finds all current nodes.
            </summary>
            <param name="expression">The expression.</param>
            <returns>The current nodes.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.NodeReplacer">
            <summary>
            A builder for replacing nodes.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.NodeReplacer.Map">
            <summary>
            Gets or sets the variable map that is used for replacing variables.
            </summary>
            <value>
            The variable map.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.NodeReplacer.Build(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.NodeReplacer.BuildNode(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Builds the node.
            </summary>
            <param name="node">The node.</param>
            <returns>The built value.</returns>
            <exception cref="T:SpiceSharp.SpiceSharpException">Unrecognized node</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.Builders.Point">
            <summary>
            A point with two coordinates.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Point.X">
            <summary>
            Gets the x-coordinate.
            </summary>
            <value>
            The x-coordinate.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Builders.Point.Y">
            <summary>
            Gets the y-coordinate.
            </summary>
            <value>
            The y-coordinate.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Builders.Point.#ctor(System.Double,System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Builders.Point"/> struct.
            </summary>
            <param name="x">The x-coordinate.</param>
            <param name="y">The y-coordinate.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.ConstantVariable`1">
            <summary>
            A constant variable.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.ConstantVariable`1.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.ConstantVariable`1.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.ConstantVariable`1.Unit">
            <summary>
            Gets the units.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.ConstantVariable`1.#ctor(System.String,`0,SpiceSharp.Simulations.Variables.IUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.ConstantVariable`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="value">The value.</param>
            <param name="unit">The unit.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException">
            <summary>
            An exception thrown when the arguments don't match what is expected.
            </summary>
            <seealso cref="T:SpiceSharp.SpiceSharpException" />
        </member>
        <member name="M:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException.#ctor(System.Int32,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Diagnostics.ArgumentMismatchException"/> class.
            </summary>
            <param name="expected">The expected number of arguments.</param>
            <param name="actual">The actual number of arguments.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.FuncVariable`1">
            <summary>
            A variable that returns the value of a function.
            </summary>
            <typeparam name="T">The return type.</typeparam>
        </member>
        <member name="P:SpiceSharpBehavioral.FuncVariable`1.Value">
            <summary>
            Gets the value.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.FuncVariable`1.Name">
            <summary>
            Gets the name.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.FuncVariable`1.Unit">
            <summary>
            Gets the unit.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.FuncVariable`1.#ctor(System.String,System.Func{`0},SpiceSharp.Simulations.Variables.IUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.FuncVariable`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="func">The function.</param>
            <param name="unit">The unit.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="name"/> or <paramref name="func"/> is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharpBehavioral.GetSetVariable`1">
            <summary>
            An <see cref="T:SpiceSharp.Simulations.IVariable`1"/> that just has a value that has read-write access.
            </summary>
            <typeparam name="T">The base value type.</typeparam>
            <seealso cref="T:SpiceSharp.Simulations.IVariable`1" />
        </member>
        <member name="P:SpiceSharpBehavioral.GetSetVariable`1.Value">
            <summary>
            Gets or sets the value of the variable.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.GetSetVariable`1.Name">
            <summary>
            Gets the name of the variable.
            </summary>
            <value>
            The name of the variable.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.GetSetVariable`1.Unit">
            <summary>
            Gets the units of the quantity.
            </summary>
            <value>
            The units.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.GetSetVariable`1.#ctor(System.String,SpiceSharp.Simulations.Variables.IUnit)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.GetSetVariable`1"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="unit">The unit.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Lexer">
            <summary>
            A lexer that can tokenize Spice expressions.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Lexer.FromString(System.String)">
            <summary>
            Creates a lexer for a Spice behavioral expression.
            </summary>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Lexer.Type">
            <summary>
            Gets the current token type.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Lexer.Content">
            <summary>
            Gets the contents of the token.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Lexer.Index">
            <summary>
            Gets the current index in the expression.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Lexer.Length">
            <summary>
            Gets the length of the token.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Lexer.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Lexer"/> class.
            </summary>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Lexer.Next">
            <summary>
            Go to the next token.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Lexer.ContinueWhileNode">
            <summary>
            Keep reading the node.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Lexer.Continue">
            <summary>
            Go to the next character.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode">
            <summary>
            A binary operator.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Add(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an addition of two arguments.</summary><returns>The node representing the added result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Subtract(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates a subtraction of two arguments.</summary><returns>The node representing the subtracted result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Multiply(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates a multiplication of two arguments.</summary><returns>The node representing the multiplied result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Divide(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates a division of two arguments.</summary><returns>The node representing the divided result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Modulo(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/Modulo/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.And(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an and-operator of two arguments.</summary><returns>The node representing the combined result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Or(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an or-operator of two arguments.</summary><returns>The node representing the combined result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Xor(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an exclusive or-operator of two arguments.</summary><returns>the node representing the combined result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Equals(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/Equals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.NotEquals(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/NotEquals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.LessThan(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/LessThan/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.GreaterThan(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/GreaterThan/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.LessThanOrEqual(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/LessThanOrEquals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.GreaterThanOrEqual(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/GreaterThanOrEquals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Power(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/Power/*" />
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Left">
            <summary>
            Gets the left argument.
            </summary>
            <value>
            The left argument.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Right">
            <summary>
            Gets the right argument.
            </summary>
            <value>
            The right argument.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Properties">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.#ctor(SpiceSharpBehavioral.Parsers.Nodes.NodeTypes,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode"/> class.
            </summary>
            <param name="type">The node type.</param>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="left"/> or <paramref name="right"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.BinaryOperatorNode.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode">
            <summary>
            A constant node.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.Constant(System.Double)">
            <summary>Creates a constant.</summary><param name="literal">The value of the constant.</param><returns>The node representing the constant value.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.RelativeTolerance">
            <summary>
            Gets or sets the relative tolerance.
            </summary>
            <value>
            The relative tolerance.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.AbsoluteTolerance">
            <summary>
            Gets or sets the absolute tolerance.
            </summary>
            <value>
            The absolute tolerance.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.Literal">
            <summary>
            Gets the literal.
            </summary>
            <value>
            The literal.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.#ctor(System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode"/> class.
            </summary>
            <param name="literal">The literal.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.ConstantNode.ToString(System.String,System.IFormatProvider)">
            <summary>
            Converts to string.
            </summary>
            <param name="format">The format.</param>
            <param name="provider">The provider.</param>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.Derivatives">
            <summary>
            A class that can derive an expression node tree.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.Derivatives.Variables">
            <summary>
            Gets the map.
            </summary>
            <value>
            The map.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.Derivatives.FunctionRules">
            <summary>
            Gets or sets derivative definitions.
            </summary>
            <value>
            The derivative definitions.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Derivatives.Derive(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Derives the specified node to the variables.
            </summary>
            <param name="node">The nodes.</param>
            <returns>The derived nodes, or <c>null</c> if all derivatives are zero.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Derivatives.ChainRule(SpiceSharpBehavioral.Parsers.Nodes.FunctionNode,System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node},System.String)">
            <summary>
            Applies the chain rule on a function.
            </summary>
            <param name="function">The function definition.</param>
            <param name="dargs">The derivatives of the arguments.</param>
            <param name="format">The format of the new function. {0} denotes the old name, while {1} will hold the index to which the function should be derived.</param>
            <returns></returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Derivatives.Apply(System.Collections.Generic.Dictionary{SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharpBehavioral.Parsers.Nodes.Node},System.Func{SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Applies the specified argument.
            </summary>
            <param name="argument">The argument.</param>
            <param name="func">The function.</param>
            <returns></returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Derivatives.Combine(System.Collections.Generic.Dictionary{SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharpBehavioral.Parsers.Nodes.Node},System.Collections.Generic.Dictionary{SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharpBehavioral.Parsers.Nodes.Node},System.Func{SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node},System.Func{SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node},System.Func{SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Combines two arguments together.
            </summary>
            <param name="left">The left argument.</param>
            <param name="right">The right argument.</param>
            <param name="leftOnly">The function called when the left argument is not zero.</param>
            <param name="rightOnly">The function called when the right argument is not zero.</param>
            <param name="both">The function called when both arguments are not zero.</param>
            <returns>The result.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.FunctionRule">
            <summary>
            A function rule that can derive a function.
            </summary>
            <param name="function">The function that needs to be derived.</param>
            <param name="derivedArguments">The derived arguments.</param>
            <returns>The derived function.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.DerivativesHelper">
            <summary>
            
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.DerivativesHelper.Defaults">
            <summary>
            The default function rules.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.DerivativesHelper.RemapFunctions(System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Helper methods that changes the equality comparer for function names.
            </summary>
            <param name="comparer">The name comparer.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode">
            <summary>
            A function node.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.Function(System.String,System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>Creates a function call.</summary><param name="name">The name of the function.</param><param name="arguments">The arguments of the function.</param><returns>The node representing the function call.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.Name">
            <summary>
            Gets the name of the function.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.Arguments">
            <summary>
            Gets the arguments.
            </summary>
            <value>
            The arguments.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.#ctor(System.String,System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="arguments">The arguments.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.FunctionNode.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.Node">
            <summary>
            An abstract class representing an expression tree node.
            </summary>
            <remarks>
            This framework is loosely based on Linq expressions.
            </remarks>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.Node.Zero">
            <summary>
            A constant that represents zero. Can be used for simplifications.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.Node.One">
            <summary>
            A constant that represents one. Can be used for simplifications.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.Node.Two">
            <summary>
            A constant that represents two. Can be used for simplifications.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Add(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an addition of two arguments.</summary><returns>The node representing the added result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Subtract(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates a subtraction of two arguments.</summary><returns>The node representing the subtracted result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Multiply(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates a multiplication of two arguments.</summary><returns>The node representing the multiplied result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Divide(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates a division of two arguments.</summary><returns>The node representing the divided result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Modulo(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/Modulo/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.And(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an and-operator of two arguments.</summary><returns>The node representing the combined result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Or(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an or-operator of two arguments.</summary><returns>The node representing the combined result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Xor(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <summary>Creates an exclusive or-operator of two arguments.</summary><returns>the node representing the combined result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Equals(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/Equals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.NotEquals(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/NotEquals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.LessThan(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/LessThan/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.GreaterThan(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/GreaterThan/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.LessThanOrEqual(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/LessThanOrEquals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.GreaterThanOrEqual(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/GreaterThanOrEquals/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Power(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="left">The left argument.</param><param name="right">The right argument.</param>
            <!-- No matching elements were found for the following include tag --><include file="docs.xml" path="docs/members/Power/*" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Plus(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="argument">The argument.</param>
            <summary>Creates a unary plus operator for an argument.</summary><returns>The node representing the unary plus result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Minus(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="argument">The argument.</param>
            <summary>Creates a unary minus operator for an argument.</summary><returns>The node representing the unary minus result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Not(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="argument">The argument.</param>
            <summary>Creates a unary bang (!) operator for an argument.</summary><returns>The node representing the unary bang result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Conditional(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>Creates a conditional value.</summary><param name="condition">The condition that decides what the result should be.</param><param name="ifTrue">The value if the condition is true.</param><param name="ifFalse">The value if the condition is false.</param><returns>The node representing the conditional value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Voltage(System.String)">
            <summary>Creates a node voltage.</summary><param name="name">The name of the node.</param><returns>The node representing the node voltage.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Voltage(System.String,System.String)">
            <summary>Creates a node voltage.</summary><param name="name">The name of the node.</param><returns>The node representing the node voltage.</returns>
            <param name="reference">The name of the reference node.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Current(System.String)">
            <summary>Creates a node voltage.</summary><param name="name">The name of the node.</param><returns>The node representing the node voltage.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Property(System.String,System.String)">
            <summary>Creates a node that returns the property of a behavior.</summary><param name="name">The name of the entity or behavior.</param><param name="property">The name of the property.</param><returns>The node representing the property value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Function(System.String,System.Collections.Generic.IReadOnlyList{SpiceSharpBehavioral.Parsers.Nodes.Node})">
            <summary>Creates a function call.</summary><param name="name">The name of the function.</param><param name="arguments">The arguments of the function.</param><returns>The node representing the function call.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Function(System.String,SpiceSharpBehavioral.Parsers.Nodes.Node[])">
            <summary>Creates a function call.</summary><param name="name">The name of the function.</param><param name="arguments">The arguments of the function.</param><returns>The node representing the function call.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Variable(System.String)">
            <summary>Creates a variable.</summary><param name="name">The name of the variable.</param><returns>The node representing the variable.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.Constant(System.Double)">
            <summary>Creates a constant.</summary><param name="literal">The value of the constant.</param><returns>The node representing the constant value.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.Node.NodeType">
            <summary>
            Gets the type of the node.
            </summary>
            <value>
            The type of the node.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.Node.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.#ctor(SpiceSharpBehavioral.Parsers.Nodes.NodeTypes,SpiceSharpBehavioral.Parsers.Nodes.NodeProperties)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="properties">The properties of the node.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_Addition(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_Subtraction(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_Multiply(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator *.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_Division(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator /.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_Modulus(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator %.
            </summary>
            <param name="left">The left.</param>
            <param name="right">The right.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_UnaryPlus(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator +.
            </summary>
            <param name="arg">The argument.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_UnaryNegation(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Implements the operator -.
            </summary>
            <param name="arg">The argument.</param>
            <returns>
            The result of the operator.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.Node.op_Implicit(System.Double)~SpiceSharpBehavioral.Parsers.Nodes.Node">
            <summary>
            Performs an implicit conversion from <see cref="T:System.Double"/> to <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node"/>.
            </summary>
            <param name="literal">The literal.</param>
            <returns>
            The result of the conversion.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.NodeProperties">
            <summary>
            Node properties.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeProperties.None">
            <summary>
            No special properties.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeProperties.Constant">
            <summary>
            The result is constant.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeProperties.Terminal">
            <summary>
            The node generates a value without taking parameters.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes">
            <summary>
            Node types.
            </summary>
            <remarks>
            Node types.
            </remarks>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Add">
            <summary>
            Addition
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Subtract">
            <summary>
            Subtraction.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Multiply">
            <summary>
            Multiplication.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Divide">
            <summary>
            Division.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Modulo">
            <summary>
            Remainder.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Plus">
            <summary>
            Unary plus.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Minus">
            <summary>
            Unary minus.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Not">
            <summary>
            Logical not.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Conditional">
            <summary>
            Conditional operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Or">
            <summary>
            Conditional or.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.And">
            <summary>
            Conditional and.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Xor">
            <summary>
            Exclusive or.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Equals">
            <summary>
            Equality operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.NotEquals">
            <summary>
            Inequality operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.LessThan">
            <summary>
            Less than operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.GreaterThan">
            <summary>
            Greater than operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.LessThanOrEqual">
            <summary>
            Less than or equal operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.GreaterThanOrEqual">
            <summary>
            Greater than or equal operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Pow">
            <summary>
            Power operator.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Constant">
            <summary>
            Constant value.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Function">
            <summary>
            A function that returns a value.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Variable">
            <summary>
            A variable.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Voltage">
            <summary>
            A voltage value.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Current">
            <summary>
            A current value.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.Nodes.NodeTypes.Property">
            <summary>
            A property value.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode">
            <summary>
            A property node.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode.Property(System.String,System.String)">
            <summary>Creates a node that returns the property of a behavior.</summary><param name="name">The name of the entity or behavior.</param><param name="property">The name of the property.</param><returns>The node representing the property value.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode.Name">
            <summary>
            Gets the name of the entity.
            </summary>
            <value>
            The name of the entity.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode.PropertyName">
            <summary>
            Gets the name of the property.
            </summary>
            <value>
            The name of the property.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="property">The property.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.PropertyNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode">
            <summary>
            A ternary operator.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.Conditional(SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>Creates a conditional value.</summary><param name="condition">The condition that decides what the result should be.</param><param name="ifTrue">The value if the condition is true.</param><param name="ifFalse">The value if the condition is false.</param><returns>The node representing the conditional value.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.Condition">
            <summary>
            Gets the condition.
            </summary>
            <value>
            The condition.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.IfTrue">
            <summary>
            Gets if true.
            </summary>
            <value>
            If true.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.IfFalse">
            <summary>
            Gets if false.
            </summary>
            <value>
            If false.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.Properties">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.#ctor(SpiceSharpBehavioral.Parsers.Nodes.NodeTypes,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="condition">The condition.</param>
            <param name="ifTrue">If true.</param>
            <param name="ifFalse">If false.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="condition"/>, <paramref name="ifTrue"/> or <paramref name="ifFalse"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.TernaryOperatorNode.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode">
            <summary>
            A unary operator.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.Plus(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="argument">The argument.</param>
            <summary>Creates a unary plus operator for an argument.</summary><returns>The node representing the unary plus result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.Minus(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="argument">The argument.</param>
            <summary>Creates a unary minus operator for an argument.</summary><returns>The node representing the unary minus result.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.Not(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <param name="argument">The argument.</param>
            <summary>Creates a unary bang (!) operator for an argument.</summary><returns>The node representing the unary bang result.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.Argument">
            <summary>
            Gets the argument.
            </summary>
            <value>
            The argument.
            </value>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>
            The properties.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.#ctor(SpiceSharpBehavioral.Parsers.Nodes.NodeTypes,SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="argument">The argument.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.UnaryOperatorNode.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Nodes.VariableNode">
            <summary>
            A variable node.
            </summary>
            <seealso cref="T:SpiceSharpBehavioral.Parsers.Nodes.Node" />
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.Voltage(System.String)">
            <summary>Creates a node voltage.</summary><param name="name">The name of the node.</param><returns>The node representing the node voltage.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.Current(System.String)">
            <summary>Creates a current.</summary><param name="name">The name of the entity that conducts the current.</param><returns>The node representing the current.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.Variable(System.String)">
            <summary>Creates a variable.</summary><param name="name">The name of the variable.</param><returns>The node representing the variable.</returns>
        </member>
        <member name="P:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.Name">
            <summary>
            Gets the name of the variable.
            </summary>
            <value>
            The name of the variable.
            </value>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.#ctor(SpiceSharpBehavioral.Parsers.Nodes.NodeTypes,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.VariableNode"/> class.
            </summary>
            <param name="type">The node type.</param>
            <param name="name">The name.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" />, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Nodes.VariableNode.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> that represents this instance.
            </returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.Parser">
            <summary>
            Methods for parsing expressions.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.Parser.Parse(SpiceSharpBehavioral.Parsers.Lexer)">
            <summary>
            Parses an expression using the given lexer.
            </summary>
            <param name="lexer">The lexer.</param>
            <returns>The parsed expression.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.ParserException">
            <summary>
            An exception that is thrown while parsing.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.ParserException.#ctor(SpiceSharpBehavioral.Parsers.Lexer,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.ParserException"/> class.
            </summary>
            <param name="lexer"></param>
            <param name="message"></param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.ParserException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.ParserException"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.ParserException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.ParserException"/> class.
            </summary>
            <param name="message">The message.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.ParserException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharpBehavioral.Parsers.ParserException"/> class.
            </summary>
            <param name="info">The message.</param>
            <param name="context">The streaming context.</param>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.SpiceHelper">
            <summary>
            Spice-specific helper methods.
            </summary>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.ParseNumber(System.String)">
            <summary>
            Parses a number literal.
            </summary>
            <param name="literal">The literal.</param>
            <returns>The parsed number.</returns>
            <exception cref="T:System.Exception">Thrown if the number can't be parsed.</exception>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.f(System.Double)">
            <summary>
            Femto-...
            </summary>
            <param name="value">The value in femto-...</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.p(System.Double)">
            <summary>
            Pico-...
            </summary>
            <param name="value">The value in pico-...</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.n(System.Double)">
            <summary>
            Nano-...
            </summary>
            <param name="value">The value in nano-...</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.u(System.Double)">
            <summary>
            Micro-...
            </summary>
            <param name="value">The value in micro-....</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.m(System.Double)">
            <summary>
            Milli-...
            </summary>
            <param name="value">The value in milli-....</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.k(System.Double)">
            <summary>
            Kilo-...
            </summary>
            <param name="value">The value in kilo-...</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.Meg(System.Double)">
            <summary>
            Mega-...
            </summary>
            <param name="value">The value in mega-...</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.G(System.Double)">
            <summary>
            Giga-...
            </summary>
            <param name="value">The value in giga-...</param>
            <returns>The value.</returns>
        </member>
        <member name="M:SpiceSharpBehavioral.Parsers.SpiceHelper.T(System.Double)">
            <summary>
            Tera-...
            </summary>
            <param name="value">The value in tera-...</param>
            <returns>The value.</returns>
        </member>
        <member name="T:SpiceSharpBehavioral.Parsers.TokenType">
            <summary>
            The token types (also function as a state).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Node">
            <summary>
            A node identifier.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Identifier">
            <summary>
            An identifier.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Number">
            <summary>
            A number.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Comma">
            <summary>
            A comma.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Plus">
            <summary>
            A plus sign.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Minus">
            <summary>
            A minus sign.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Times">
            <summary>
            An asterisk (multiplication).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Divide">
            <summary>
            A forward slash (division).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Mod">
            <summary>
            A percent (modulo).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Power">
            <summary>
            A power sign.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Equals">
            <summary>
            An equality (==).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.NotEquals">
            <summary>
            An inequality (!=)
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.LessThan">
            <summary>
            Less than.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.GreaterThan">
            <summary>
            Greater than.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.LessEqual">
            <summary>
            Less or equal than.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.GreaterEqual">
            <summary>
            Greater or equal than.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Or">
            <summary>
            Or.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.And">
            <summary>
            And.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Bang">
            <summary>
            A bang (exclamation mark).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Huh">
            <summary>
            A question mark.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Colon">
            <summary>
            A colon.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.At">
            <summary>
            The at-sign.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Assign">
            <summary>
            An assignment (=).
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Dot">
            <summary>
            A dot.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.LeftParenthesis">
            <summary>
            The left parenthesis.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.RightParenthesis">
            <summary>
            The right parenthesis.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.LeftIndex">
            <summary>
            The left square bracket.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.RightIndex">
            <summary>
            The right square bracket.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.Unknown">
            <summary>
            An unknown character.
            </summary>
        </member>
        <member name="F:SpiceSharpBehavioral.Parsers.TokenType.EndOfExpression">
            <summary>
            The end of the expression.
            </summary>
        </member>
        <member name="T:SpiceSharpBehavioral.Properties.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Properties.Resources.ArgumentMismatch">
            <summary>
              Looks up a localized string similar to Invalid number of arguments: {0} expected but {1} were given..
            </summary>
        </member>
        <member name="P:SpiceSharpBehavioral.Properties.Resources.LooseLinkCurrent">
            <summary>
              Looks up a localized string similar to The current through {0} is only loosely linked. This might result in less accurate results, or instability. Consider placing a voltage source in series and referencing the current through that instead..
            </summary>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext">
            <summary>
            A context for behavioral components.
            </summary>
            <seealso cref="T:SpiceSharp.Components.ComponentBindingContext" />
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.#ctor(SpiceSharp.Components.IComponent,SpiceSharp.Simulations.ISimulation,SpiceSharp.Behaviors.IBehaviorContainer)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext" /> class.
            </summary>
            <param name="component">The component creating the behavior.</param>
            <param name="simulation">The simulation for which a behavior is created.</param>
            <param name="behaviors">The created behaviors.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.CreateDerivatives(SpiceSharpBehavioral.Parsers.Nodes.Node)">
            <summary>
            Creates the derivatives for the specified function.
            </summary>
            <param name="function">The function.</param>
            <returns>The derivatives with respect to all variables.</returns>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.GetVariableNodes``1(SpiceSharp.Simulations.IVariableFactory{SpiceSharp.Simulations.IVariable{``0}},SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharp.Simulations.IVariable{``0})">
            <summary>
            Maps all the nodes that are referenced in the function.
            </summary>
            <typeparam name="T">The variable value type.</typeparam>
            <param name="factory">The factory for variables.</param>
            <param name="function">The function containing the variables.</param>
            <param name="ownBranch">Optionally a branch for the current behavior branch current.</param>
            <returns>The variables by their nodes.</returns>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.MapVariableNodes``1(SpiceSharp.Simulations.IVariableFactory{SpiceSharp.Simulations.IVariable{``0}},SpiceSharpBehavioral.Parsers.Nodes.Node,SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{``0},SpiceSharp.Simulations.IVariable{``0})">
            <summary>
            Maps all the nodes that are referenced in the function and makes them discoverable by the function builder.
            </summary>
            <typeparam name="T">The variable value type.</typeparam>
            <param name="factory">The factory for variables.</param>
            <param name="function">The function containing the variables.</param>
            <param name="builder">The function builder.</param>
            <param name="ownBranch">Optionally, a branch for the current behavior branch current.</param>
            <returns>The variables by their nodes.</returns>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.MapVariableNodes``1(System.Collections.Generic.Dictionary{SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharp.Simulations.IVariable{``0}},SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{``0})">
            <summary>
            Maps the nodes in the dictionary such that they are discoverable by the function builder.
            </summary>
            <typeparam name="T">The variable value type.</typeparam>
            <param name="variables">The dictionary of variables.</param>
            <param name="builder">The function builder.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.GetVariableNode``1(SpiceSharp.Simulations.IVariableFactory{SpiceSharp.Simulations.IVariable{``0}},SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharp.Simulations.IVariable{``0})">
            <summary>
            Remap a variable node to an <see cref="T:SpiceSharp.Simulations.IVariable`1"/>.
            </summary>
            <typeparam name="T">the variable type.</typeparam>
            <param name="factory">The variable factory.</param>
            <param name="node">The node.</param>
            <param name="ownBranch">The branch.</param>
            <returns>The variable.</returns>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralBindingContext.ConvertVariables(System.Collections.Generic.IReadOnlyDictionary{SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharp.Simulations.IVariable{System.Double}},SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Numerics.Complex})">
            <summary>
            Converts any variables in a dictionary for a complex behavior that wishes to reuse it.
            </summary>
            <param name="variables">The variables.</param>
            <param name="builder">The complex function builder.</param>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.BehavioralComponent">
            <summary>
            A base implementation for behavioral components.
            </summary>
            <seealso cref="T:SpiceSharp.Entities.Entity" />
            <seealso cref="T:SpiceSharp.Components.IComponent" />
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BehavioralComponent.Model">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BehavioralComponent.Nodes">
            <summary>
            Gets the nodes.
            </summary>
            <value>
            The nodes.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralComponent.#ctor(System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralSources.BehavioralComponent"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="basePinCount">The base pin count.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="name"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralComponent.Connect(System.String[])">
            <summary>
            Connects the component in the circuit.
            </summary>
            <param name="nodes">The node indices.</param>
            <returns>
            The instance calling the method for chaining.
            </returns>
            <exception cref="T:SpiceSharp.NodeMismatchException">Thrown if the the number of nodes does not match that of the component.</exception>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1">
            <summary>
            A class for handling matrix/rhs contributions for behavioral components.
            </summary>
            <typeparam name="T">The base type value.</typeparam>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Current">
            <summary>
            Gets the current value.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Count">
            <summary>
            Gets the number of contributions.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Accumulate">
            <summary>
            The function that accumulates the RHS result.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Invert">
            <summary>
            The function to invert a value.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.#ctor(SpiceSharp.Simulations.ISolverSimulationState{`0},SpiceSharp.Components.CommonBehaviors.OnePort{`0},System.Collections.Generic.List{System.ValueTuple{SpiceSharp.Simulations.IVariable{`0},System.Func{`0}}},System.Func{`0})">
            <summary>
            Creates contributions for behavioral sources.
            </summary>
            <param name="state">The solver simulation state.</param>
            <param name="onePort">The one-port for row variables.</param>
            <param name="derivatives">The (column) variables and their derivatives.</param>
            <param name="value">The function that describes the value.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.#ctor(SpiceSharp.Simulations.ISolverSimulationState{`0},SpiceSharp.Simulations.IVariable{`0},SpiceSharp.Simulations.IVariable{`0},System.Collections.Generic.List{System.ValueTuple{SpiceSharp.Simulations.IVariable{`0},System.Func{`0}}},System.Func{`0})">
            <summary>
            Creates contributions for behavioral sources.
            </summary>
            <param name="state">The solver simulation state.</param>
            <param name="posRow">The positive row variable.</param>
            <param name="negRow">The negative row variable.</param>
            <param name="derivatives">The (column) variables and their derivatives.</param>
            <param name="value">The function that describes the value.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Calculate">
            <summary>
            Calculates the contributions.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Apply">
            <summary>
            Applies the last calculated contributions.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BehavioralContributions`1.Load">
            <summary>
            Loads the behavioral contributions. This is effectively calculating and applying the contributions.
            </summary>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs`1">
            <summary>
            Event arguments for when a builder has been created.
            </summary>
            <typeparam name="T">The value type.</typeparam>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs`1.Context">
            <summary>
            Gets the context for which the builder is created.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs`1.Builder">
            <summary>
            Gets the builder.
            </summary>
            <value>
            The builder.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs`1.#ctor(SpiceSharp.Components.IComponentBindingContext,SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs`1"/> class.
            </summary>
            <param name="context">The context.</param>
            <param name="builder">The builder.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> or <paramref name="builder"/> is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.BuilderHelper">
            <summary>
            Helper methods for behavioral components.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BuilderHelper.RegisterDefaultBuilder(System.Object,SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs{System.Double})">
            <summary>
            A default method for registering variables with a real function builder.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.BuilderHelper.RegisterDefaultBuilder(System.Object,SpiceSharp.Components.BehavioralSources.BuilderCreatedEventArgs{System.Numerics.Complex})">
            <summary>
            A default method for registering variables with a real function builder.
            </summary>
            <param name="sender">The sender.</param>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.Parameters">
            <summary>
            Base parameters for a behavioral component.
            </summary>
            <seealso cref="T:SpiceSharp.ParameterSets.ParameterSet" />
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.Expression">
            <summary>
            Gets or sets the expression.
            </summary>
            <value>
            The expression.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.Function">
            <summary>
            Gets the function.
            </summary>
            <value>
            The function.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.ParseAction">
            <summary>
            Gets or sets the parse action.
            </summary>
            <value>
            The parse action.
            </value>
        </member>
        <member name="E:SpiceSharp.Components.BehavioralSources.Parameters.RealBuilderCreated">
            <summary>
            Occurs when a builder has been created that uses real values.
            </summary>
        </member>
        <member name="E:SpiceSharp.Components.BehavioralSources.Parameters.ComplexBuilderCreated">
            <summary>
            Occurs when a builder has been created that uses complex values.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.VoltageNodes">
            <summary>
            Gets the voltage nodes.
            </summary>
            <value>
            The voltage nodes.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.CurrentNodes">
            <summary>
            Gets the current nodes.
            </summary>
            <value>
            The current nodes.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.VariableNodes">
            <summary>
            Gets all variable nodes.
            </summary>
            <value>
            The variable nodes.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralSources.Parameters.VariableComparer">
            <summary>
            Gets or sets the variable comparer.
            </summary>
            <value>
            The variable comparer.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.Parameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralSources.Parameters"/> class.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.Parameters.RegisterBuilder(SpiceSharp.Components.IComponentBindingContext,SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Double})">
            <summary>
            Registers a new function builder.
            </summary>
            <param name="context">The context.</param>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.Parameters.RegisterBuilder(SpiceSharp.Components.IComponentBindingContext,SpiceSharpBehavioral.Builders.Functions.IFunctionBuilder{System.Numerics.Complex})">
            <summary>
            Register a new function builder.
            </summary>
            <param name="context">The context.</param>
            <param name="builder">The builder.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.Parameters.SpiceSharp#ParameterSets#IImportParameterSet{System#String}#GetParameterSetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.Parameters.SpiceSharp#ParameterSets#IExportPropertySet{System#String}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.Parameters.SpiceSharp#ParameterSets#IExportPropertySet{SpiceSharpBehavioral#Parsers#Nodes#Node}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralSources.VariableNodeComparer">
            <summary>
            A specialized comparer for <see cref="T:SpiceSharpBehavioral.Parsers.Nodes.VariableNode"/> that can account for
            node and entity names.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.VariableNodeComparer.#ctor(System.Collections.Generic.IEqualityComparer{System.String},System.Collections.Generic.IEqualityComparer{System.String},System.Collections.Generic.IEqualityComparer{System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralSources.VariableNodeComparer"/> class.
            </summary>
            <param name="nodeComparer">The name comparer for voltage nodes.</param>
            <param name="entityComparer">The name comparer for entities.</param>
            <param name="variableComparer">The name comparer for variables.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.VariableNodeComparer.Equals(SpiceSharpBehavioral.Parsers.Nodes.VariableNode,SpiceSharpBehavioral.Parsers.Nodes.VariableNode)">
            <summary>
            Check equality.
            </summary>
            <param name="x">The first variable node.</param>
            <param name="y">The second variable node.</param>
            <returns>
                <c>true</c> if they are equal; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralSources.VariableNodeComparer.GetHashCode(SpiceSharpBehavioral.Parsers.Nodes.VariableNode)">
            <summary>
            Get the hash code.
            </summary>
            <param name="obj">The object.</param>
            <returns>The hash code.</returns>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCapacitor">
            <summary>
            A behavioral capacitor.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralSources.BehavioralComponent"/>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCapacitor.BehavioralCapacitorPinCount">
            <summary>
            The behavioral capacitor base pin count.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCapacitor"/> class.
            </summary>
            <param name="name">The name of the entity</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitor.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCapacitor"/> class.
            </summary>
            <param name="name">The name of the resistor.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">The negative node.</param>
            <param name="expression">The expression that describes the resistance.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitor.SpiceSharp#Validation#IRuleSubject#Apply(SpiceSharp.Validation.IRules)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitor.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc />
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.BehavioralCapacitor"/>
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing.Variables">
            <summary>
            The variables.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing.VariableNodes">
            <summary>
            Gets the variables that are associated with each variable node.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing.Function">
            <summary>
            The function that computes the value.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing.Derivatives">
            <summary>
            The functions that compute the derivatives.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency">
            <summary>
            Frequency behavior for a <see cref="T:SpiceSharp.Components.BehavioralCapacitor"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.ComplexVoltage">
            <summary>
            Gets the complex voltage.
            </summary>
            <value>The complex voltage.</value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.ComplexCurrent">
            <summary>
            Gets the complex current.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.ComplexPower">
            <summary>
            Gets the complex power.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#InitializeParameters">
            <summary>
            The frequency-dependent initialization.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#Load">
            <summary>
            The frequency-dependent load behavior.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Numerics#Complex}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time">
            <summary>
            Time-dependent behavior for a <see cref="T:SpiceSharp.Components.BehavioralCapacitor"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Biasing"/>
            <seealso cref="T:SpiceSharp.Behaviors.ITimeBehavior"/>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.Voltage">
            <summary>
            Gets the voltage.
            </summary>
            <value>
            The voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.Power">
            <summary>
            Gets the power.
            </summary>
            <value>
            The power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.SpiceSharp#Behaviors#ITimeBehavior#InitializeStates">
            <summary>
            Initialization.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.SpiceSharp#Behaviors#IBiasingBehavior#Load">
            <summary>
            Load behavior.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCapacitorBehaviors.Time.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCurrentSource">
            <summary>
            A behavioral current source.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralSources.BehavioralComponent" />
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCurrentSource.BehavioralCurrentSourcePinCount">
            <summary>
            The behavioral current source base pin count
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCurrentSource"/> class.
            </summary>
            <param name="name">The name of the entity.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSource.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCurrentSource"/> class.
            </summary>
            <param name="name">The name of the source.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">The negative node.</param>
            <param name="expression">The expression that describes the current.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSource.SpiceSharp#Validation#IRuleSubject#Apply(SpiceSharp.Validation.IRules)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSource.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc />
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.BehavioralCurrentSource"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Behaviors.Behavior" />
            <seealso cref="T:SpiceSharp.Behaviors.IBiasingBehavior" />
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.VariableNodes">
            <summary>
            Gets the variables that are associated with each variable node.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.Function">
            <summary>
            The function that computes the value.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.Derivatives">
            <summary>
            The functions that compute the derivatives.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.Voltage">
            <summary>
            Gets the voltage.
            </summary>
            <value>
            The voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.Power">
            <summary>
            Gets the instantaneous power.
            </summary>
            <value>
            The power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.SpiceSharp#Behaviors#IBiasingBehavior#Load">
            <summary>
            Loads the Y-matrix and right hand side vector.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency">
            <summary>
            Frequency behavior for a <see cref="T:SpiceSharp.Components.BehavioralCurrentSource"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Biasing" />
            <seealso cref="T:SpiceSharp.Behaviors.IFrequencyBehavior" />
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.ComplexCurrent">
            <summary>
            Gets the complex current.
            </summary>
            <value>
            The complex current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.ComplexVoltage">
            <summary>
            Gets the complex voltage.
            </summary>
            <value>
            The complex voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.ComplexPower">
            <summary>
            Gets the complex power.
            </summary>
            <value>
            The complex power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#InitializeParameters">
            <summary>
            Initializes the parameters.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#Load">
            <summary>
            Loads the Y-matrix and right hand side vector.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Numerics#Complex}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralCurrentSourceBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralResistor">
            <summary>
            A behavioral resistor.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralSources.BehavioralComponent"/>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralResistor.BehavioralResistorPinCount">
            <summary>
            The behavioral resistor base pin count.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistor.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralResistor"/> class.
            </summary>
            <param name="name">The name of the entity</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistor.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralResistor"/> class.
            </summary>
            <param name="name">The name of the resistor.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">The negative node.</param>
            <param name="expression">The expression that describes the resistance.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistor.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc />
        </member>
        <member name="T:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.BehavioralResistor"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Behaviors.Behavior"/>
            <seealso cref="T:SpiceSharp.Behaviors.IBiasingBehavior"/>
            <seealso cref="T:SpiceSharp.Components.IBranchedBehavior`1"/>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.VariableNodes">
            <summary>
            Gets the variables that are associated with each variable node.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.Function">
            <summary>
            The function that computes the value.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.Derivatives">
            <summary>
            The functions that compute the derivatives.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.SpiceSharp#Components#IBranchedBehavior{System#Double}#Branch">
            <summary>
            Gets the branch equation variable.
            </summary>
            <value>
            The branch equation variable.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.Voltage">
            <summary>
            Gets the voltage.
            </summary>
            <value>
            The voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.Power">
            <summary>
            Gets the power.
            </summary>
            <value>
            The power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.SpiceSharp#Behaviors#IBiasingBehavior#Load">
            <summary>
            Loads the Y-matrix and right hand side vector.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency">
            <summary>
            Frequency behavior for a <see cref="T:SpiceSharp.Components.BehavioralVoltageSource"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralResistorBehaviors.Biasing" />
            <seealso cref="T:SpiceSharp.Behaviors.IFrequencyBehavior" />
            <seealso cref="T:SpiceSharp.Components.IBranchedBehavior`1"/>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.SpiceSharp#Components#IBranchedBehavior{System#Numerics#Complex}#Branch">
            <summary>
            Gets the branch equation variable.
            </summary>
            <value>
            The branch equation variable.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.ComplexVoltage">
            <summary>
            Gets the complex voltage.
            </summary>
            <value>
            The complex voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.ComplexCurrent">
            <summary>
            Gets the complex current.
            </summary>
            <value>
            The complex current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.ComplexPower">
            <summary>
            Gets the complex power.
            </summary>
            <value>
            The complex power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#InitializeParameters">
            <summary>
            Initializes the frequency behavior.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#Load">
            <summary>
            Loads the Y-matrix and right hand side vector.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Numerics#Complex}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralResistorBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralVoltageSource">
            <summary>
            A behavioral voltage source.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralSources.BehavioralComponent" />
        </member>
        <member name="F:SpiceSharp.Components.BehavioralVoltageSource.BehavioralVoltageSourcePinCount">
            <summary>
            The behavioral voltage source base pin count
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralVoltageSource"/> class.
            </summary>
            <param name="name">The name of the entity.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSource.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralVoltageSource"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">The negative node.</param>
            <param name="expression">The expression.</param>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSource.SpiceSharp#Validation#IRuleSubject#Apply(SpiceSharp.Validation.IRules)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSource.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc />
        </member>
        <member name="T:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.BehavioralVoltageSource"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Behaviors.Behavior" />
            <seealso cref="T:SpiceSharp.Behaviors.IBiasingBehavior" />
            <seealso cref="T:SpiceSharp.Components.IBranchedBehavior`1"/>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.VariableNodes">
            <summary>
            Gets the variables that are associated with each variable node.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.Function">
            <summary>
            The function that computes the value.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.Derivatives">
            <summary>
            The functions that compute the derivatives.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.SpiceSharp#Components#IBranchedBehavior{System#Double}#Branch">
            <summary>
            Gets the branch equation variable.
            </summary>
            <value>
            The branch equation variable.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.Voltage">
            <summary>
            Gets the voltage.
            </summary>
            <value>
            The voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.Current">
            <summary>
            Gets the current.
            </summary>
            <value>
            The current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.Power">
            <summary>
            Gets the instantaneous power.
            </summary>
            <value>
            The power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.SpiceSharp#Behaviors#IBiasingBehavior#Load">
            <summary>
            Loads the Y-matrix and right hand side vector.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency">
            <summary>
            Frequency behavior for a <see cref="T:SpiceSharp.Components.BehavioralVoltageSource"/>.
            </summary>
            <seealso cref="T:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Biasing" />
            <seealso cref="T:SpiceSharp.Behaviors.IFrequencyBehavior" />
            <seealso cref="T:SpiceSharp.Components.IBranchedBehavior`1"/>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.SpiceSharp#Components#IBranchedBehavior{System#Numerics#Complex}#Branch">
            <summary>
            Gets the branch equation variable.
            </summary>
            <value>
            The branch equation variable.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.ComplexVoltage">
            <summary>
            Gets the complex voltage.
            </summary>
            <value>
            The complex voltage.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.ComplexCurrent">
            <summary>
            Gets the complex current.
            </summary>
            <value>
            The complex current.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.ComplexPower">
            <summary>
            Gets the complex power.
            </summary>
            <value>
            The complex power.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.#ctor(SpiceSharp.Components.BehavioralSources.BehavioralBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency"/> class.
            </summary>
            <param name="context">The context.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if <paramref name="context"/> is <c>null</c>.</exception>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#InitializeParameters">
            <summary>
            Initializes the parameters.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#Load">
            <summary>
            Loads the Y-matrix and right hand side vector.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Numerics#Complex}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.BehavioralVoltageSourceBehaviors.Frequency.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceBehaviors.Biasing">
            <summary>
            A generic biasing behavior for Laplace components.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceBehaviors.Biasing.Parameters">
            <summary>
            Gets the parameters.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Biasing.#ctor(SpiceSharp.Entities.IBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Biasing.Load(System.Double)">
            <summary>
            Loads the solver and RHS-vector.
            </summary>
            <remarks>
            Since a transfer function is linear, there is no RHS value.
            </remarks>
            <param name="dydu">The derivative with respect to the input.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Biasing.SpiceSharp#Behaviors#IBiasingBehavior#Load">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceBehaviors.Frequency">
            <summary>
            Frequency behavior for Laplace-based components.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Frequency.#ctor(SpiceSharp.Entities.IBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceBehaviors.Frequency"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Frequency.InitializeParameters">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Frequency.Load(System.Numerics.Complex)">
            <summary>
            Loads the Jacobian and right-hand side vector.
            </summary>
            <param name="dydu">The derivative of the output with respect to the input.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Frequency.SpiceSharp#Behaviors#IFrequencyBehavior#Load">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceBehaviors.Parameters">
            <summary>
            Base parameters for a Laplace-based component.
            </summary>
            <seealso cref="T:SpiceSharp.ParameterSets.ParameterSet"/>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceBehaviors.Parameters.Numerator">
            <summary>
            Gets or sets the numerator of the Laplace source.
            </summary>
            <value>
            The numerator.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceBehaviors.Parameters.Denominator">
            <summary>
            Gets or sets the denominator of the Laplace source.
            </summary>
            <value>
            The denominator.
            </value>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceBehaviors.Parameters.Delay">
            <summary>
            Gets or sets the delay.
            </summary>
            <value>
            The delay.
            </value>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Parameters.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceBehaviors.Parameters"/> class.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Parameters.SpiceSharp#ParameterSets#IImportParameterSet{System#Double[]}#GetParameterSetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Parameters.SpiceSharp#ParameterSets#IExportPropertySet{System#Double[]}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Parameters.SpiceSharp#ParameterSets#IImportParameterSet{System#Double}#GetParameterSetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Parameters.SpiceSharp#ParameterSets#IExportPropertySet{System#Double}#GetPropertyGetter(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceBehaviors.Time">
            <summary>
            Time-dependent behavior for Laplace-based components.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceBehaviors.Time.Input">
            <summary>
            Gets the input value.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Time.#ctor(SpiceSharp.Entities.IBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceBehaviors.Time"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Time.InitializeStates">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Time.Load(System.Double,System.Double)">
            <summary>
            Loads the Jacobian and right-hand side vector.
            </summary>
            <param name="dydu">The derivative of the output with respect to the input.</param>
            <param name="fy">The value of the output.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceBehaviors.Time.SpiceSharp#Behaviors#IBiasingBehavior#Load">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Biasing">
            <summary>
            A biasing behavior for a <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/>.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Biasing.#ctor(SpiceSharp.Components.CommonBehaviors.ICurrentControlledBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Biasing.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Frequency">
            <summary>
            A frequency behavior for a <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/>.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Frequency.#ctor(SpiceSharp.Components.CommonBehaviors.ICurrentControlledBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Frequency"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Frequency.Load(System.Numerics.Complex)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Frequency.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Time">
            <summary>
            The time-dependent behavior for a <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Time.Input">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Time.#ctor(SpiceSharp.Components.CommonBehaviors.ICurrentControlledBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Time"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSourceBehaviors.Time.Load(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource">
            <summary>
            A current-controlled current source that is described by a transfer function.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource.PinCount">
            <summary>
            The pin count for a current-controlled current source.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource.ControllingSource">
            <summary>
            Gets or sets the controlling source.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource.#ctor(System.String,System.String,System.String,System.String,System.Double[],System.Double[],System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">The negative node.</param>
            <param name="voltageSource">The controlling voltage source.</param>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <param name="delay">The delay.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Biasing.Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Biasing.#ctor(SpiceSharp.Components.CommonBehaviors.ICurrentControlledBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Biasing.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Frequency">
            <summary>
            Frequency behavior for a <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Frequency.SpiceSharp#Components#IBranchedBehavior{System#Double}#Branch">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Frequency.SpiceSharp#Components#IBranchedBehavior{System#Numerics#Complex}#Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Frequency.#ctor(SpiceSharp.Components.CommonBehaviors.ICurrentControlledBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Frequency.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Frequency.Load(System.Numerics.Complex)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Time">
            <summary>
            Time behavior for a <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Time.Input">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Time.Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Time.#ctor(SpiceSharp.Components.CommonBehaviors.ICurrentControlledBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Time"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSourceBehaviors.Time.Load(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource">
            <summary>
            A current-controlled current source that is described by a transfer function.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource.PinCount">
            <summary>
            The pin count for a current-controlled current source.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource.ControllingSource">
            <summary>
            Gets or sets the controlling source.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource.#ctor(System.String,System.String,System.String,System.String,System.Double[],System.Double[],System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceCurrentControlledCurrentSource"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">The negative node.</param>
            <param name="voltageSource">The controlling voltage source.</param>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <param name="delay">The delay.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceCurrentControlledVoltageSource.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Biasing.Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Biasing.#ctor(SpiceSharp.Components.IComponentBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Biasing.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Frequency">
            <summary>
            Frequency behavior for a <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource"/>.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Frequency.#ctor(SpiceSharp.Components.IComponentBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Frequency"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Frequency.Load(System.Numerics.Complex)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Frequency.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Time">
            <summary>
            Time behavior for a <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Time.Input">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Time.Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Time.#ctor(SpiceSharp.Components.IComponentBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Time"/> class.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSourceBehaviors.Time.Load(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource">
            <summary>
            A voltage-controlled voltage source that is described by a transfer function.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource.PinCount">
            <summary>
            The pin count for a voltage-controlled voltage source.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource.#ctor(System.String,System.String,System.String,System.String,System.String,System.Double[],System.Double[],System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource"/>.
            </summary>
            <param name="name">The name.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">the negative node.</param>
            <param name="controlPos">The controlling positive node.</param>
            <param name="controlNeg">The controlling negative node.</param>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <param name="delay">The delay.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledCurrentSource.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing.Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing.#ctor(SpiceSharp.Components.IComponentBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Frequency">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Frequency.SpiceSharp#Components#IBranchedBehavior{System#Double}#Branch">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Frequency.SpiceSharp#Components#IBranchedBehavior{System#Numerics#Complex}#Branch">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Frequency.#ctor(SpiceSharp.Components.IComponentBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Frequency.Load(System.Double)">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Frequency.Load(System.Numerics.Complex)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Time">
            <summary>
            Biasing behavior for a <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource"/>.
            </summary>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Time.Branch">
            <inheritdoc/>
        </member>
        <member name="P:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Time.Input">
            <inheritdoc/>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Time.#ctor(SpiceSharp.Components.IComponentBindingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Biasing"/> class.
            </summary>
            <param name="context">The binding context.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSourceBehaviors.Time.Load(System.Double,System.Double)">
            <inheritdoc/>
        </member>
        <member name="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource">
            <summary>
            A voltage-controlled voltage source that is described by a transfer function.
            </summary>
        </member>
        <member name="F:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource.PinCount">
            <summary>
            The pin count for a voltage-controlled voltage source.
            </summary>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource"/>.
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource.#ctor(System.String,System.String,System.String,System.String,System.String,System.Double[],System.Double[],System.Double)">
            <summary>
            Initializes a new instance of the <see cref="T:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource"/>.
            </summary>
            <param name="name">The name.</param>
            <param name="pos">The positive node.</param>
            <param name="neg">the negative node.</param>
            <param name="controlPos">The controlling positive node.</param>
            <param name="controlNeg">The controlling negative node.</param>
            <param name="numerator">The numerator.</param>
            <param name="denominator">The denominator.</param>
            <param name="delay">The delay.</param>
        </member>
        <member name="M:SpiceSharp.Components.LaplaceVoltageControlledVoltageSource.CreateBehaviors(SpiceSharp.Simulations.ISimulation)">
            <inheritdoc/>
        </member>
        <member name="F:ThisAssembly.Git.IsDirty">
            <summary>
            Gets whether the current repository is dirty.
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.IsDirtyString">
            <summary>
            => @"true"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.RepositoryUrl">
            <summary>
            => @"https://github.com/SpiceSharp/SpiceSharpBehavioral.git"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Branch">
            <summary>
            => @"master"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commit">
            <summary>
            => @"2c446dd"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Sha">
            <summary>
            => @"2c446ddf166dadb57c5af2488fd32179f905a051"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.CommitDate">
            <summary>
            => @"2021-12-30T20:15:10+01:00"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Commits">
            <summary>
            => @"0"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.Tag">
            <summary>
            => @"v3.1.3"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseTag">
            <summary>
            => @"v3.1.3"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Major">
            <summary>
            => @"3"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Minor">
            <summary>
            => @"1"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.BaseVersion.Patch">
            <summary>
            => @"3"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Major">
            <summary>
            => @"3"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Minor">
            <summary>
            => @"1"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Patch">
            <summary>
            => @"3"
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Label">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.DashLabel">
            <summary>
            => @""
            </summary>
        </member>
        <member name="F:ThisAssembly.Git.SemVer.Source">
            <summary>
            => @"Tag"
            </summary>
        </member>
    </members>
</doc>
